{"version":3,"sources":["api.ts","utils.ts","Components/Detail.tsx","Components/Slider.tsx","Routes/Home.tsx","Components/SearchResult.tsx","Routes/Search.tsx","Routes/Tv.tsx","Components/Header.tsx","App.tsx","index.tsx","theme.ts"],"names":["API_KEY","process","BASE_PATH","getMovies","fetch","then","response","json","getTopMovies","getUpcomingMovies","getTopShows","getPopularShows","getOnAirShows","makeImagePath","id","format","Overlay","styled","motion","div","BigMovie","props","theme","black","lighter","BigCover","BigTitle","h3","white","BigOverview","p","DetailWrap","Runtime","span","Bigdate","BigVote","GenresList","ul","BigTagline","Detail","data","type","category","url","history","useHistory","scrollY","useViewportScroll","bigMovieMatch","useRouteMatch","clickedMovie","params","movieId","results","find","movie","useQuery","getDetail","detail","AnimatePresence","onClick","goBack","exit","opacity","animate","style","top","get","layoutId","backgroundImage","backdrop_path","title","name","release_date","first_air_date","substr","runtime","Math","floor","vote_average","genres","map","genre","tagline","overview","Row","Box","bgPhoto","Info","Left","Right","rowVariants","hidden","back","x","window","outerWidth","visible","boxVariants","normal","scale","hover","y","transition","delay","duaration","infoVariants","Slider","useState","index","setIndex","leaving","setLeaving","setBack","toggleLeaving","prev","totalMovies","length","maxIndex","initial","custom","onExitComplete","variants","duration","slice","whileHover","push","Wrapper","Loader","Banner","Title","h2","Overview","SlideContainer","SliderTitle","Home","nowPlaying","nowPlayingLoading","isLoading","topMovie","topMovieLoading","upcomingMovie","upcomingMovieLoading","article","List","bigphoto","SearchResult","SlideWrap","SlideTitle","Search","location","useLocation","keyword","URLSearchParams","search","query","searchMovie","loadSearchMovie","refetchMovie","refetch","searchShows","loadSearchShows","refetchShows","useEffect","total_results","Tv","topShow","topShowLoading","popularShow","popularShowLoading","onAirShow","onAirShowLoading","Nav","nav","Col","Logo","svg","red","Items","Item","li","darker","form","Circle","Input","input","logoVariants","fillOpacity","active","repeat","Infinity","navVariants","backgroundColor","scroll","Header","searchOpen","setSearchOpen","homeMatch","tvMatch","inputAnimation","useAnimation","navAnimation","onChange","start","useForm","register","handleSubmit","xmlns","width","height","viewBox","path","d","to","isExact","onSubmit","scaleX","fill","fillRule","clipRule","required","minLength","placeholder","App","basename","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.ead08b75.chunk.js","sourcesContent":["const API_KEY = process.env.REACT_APP_MOVIE_API_KEY;\r\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\r\n\r\nexport interface IMovie {\r\n  id: number;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  title?: string;\r\n  name?: string;\r\n  original_title?: string;\r\n  original_name?: string;\r\n  overview: string;\r\n  release_date?: string;\r\n  first_air_date?: string;\r\n  vote_average: number;\r\n  url?: string;\r\n  type?: string;\r\n  category?: string;\r\n}\r\n\r\nexport interface IShow {\r\n  id: number;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  name: string;\r\n  overview: string;\r\n  first_air_date: string;\r\n  vote_average: number;\r\n}\r\n\r\ninterface IGenres {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nexport interface IDetail {\r\n  genres: IGenres[];\r\n  homepage: string;\r\n  original_title?: string;\r\n  original_name?: string;\r\n  tagline: string;\r\n  runtime: number;\r\n  number_of_episodes?: number;\r\n  number_of_seasons?: number;\r\n}\r\n\r\nexport interface IGetMoviesResult {\r\n  dates: {\r\n    maximum: string;\r\n    minimum: string;\r\n  };\r\n  page: number;\r\n  results: IMovie[];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\n\r\nexport interface IGetShowResult {\r\n  date: {\r\n    maximum: string;\r\n    minimum: string;\r\n  };\r\n  page: number;\r\n  results: IShow[];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\n\r\nexport function getMovies() {\r\n  return fetch(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function getTopMovies() {\r\n  return fetch(`${BASE_PATH}/movie/top_rated?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function getUpcomingMovies() {\r\n  return fetch(`${BASE_PATH}/movie/upcoming?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function getDetail(category?: string, movieId?: string) {\r\n  return fetch(`${BASE_PATH}/${category}/${movieId}?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function getTopShows() {\r\n  return fetch(`${BASE_PATH}/tv/top_rated?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function getPopularShows() {\r\n  return fetch(`${BASE_PATH}/tv/popular?api_key=${API_KEY}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function getOnAirShows() {\r\n  return fetch(`${BASE_PATH}/tv/airing_today?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function getSearchMovie(query: string | null) {\r\n  return fetch(\r\n    `${BASE_PATH}/search/movie?api_key=${API_KEY}&query=${query}}&page=1&include_adult=false`\r\n  ).then((response) => response.json());\r\n}\r\n\r\nexport function getSearchShows(query: string | null) {\r\n  return fetch(\r\n    `${BASE_PATH}/search/tv?api_key=${API_KEY}&query=${query}}&page=1&include_adult=false`\r\n  ).then((response) => response.json());\r\n}\r\n","export function makeImagePath(id: string, format?: string) {\r\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`;\r\n}\r\n","import { ISlider } from \"./Slider\";\r\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getDetail, IDetail, IMovie } from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\n\r\nconst Overlay = styled(motion.div)`\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  opacity: 0;\r\n`;\r\n\r\nconst BigMovie = styled(motion.div)`\r\n  position: absolute;\r\n  z-index: 999;\r\n  width: 40vw;\r\n  height: 80vh;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n`;\r\n\r\nconst BigCover = styled.div`\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 400px;\r\n`;\r\n\r\nconst BigTitle = styled.h3`\r\n  color: ${(props) => props.theme.white.lighter};\r\n  padding: 20px;\r\n  font-size: 46px;\r\n  position: relative;\r\n  top: -80px;\r\n`;\r\n\r\nconst BigOverview = styled.p`\r\n  padding: 20px;\r\n  position: relative;\r\n  top: -80px;\r\n  color: ${(props) => props.theme.white.lighter};\r\n`;\r\n\r\nconst DetailWrap = styled.div`\r\n  padding: 0 20px;\r\n`;\r\n\r\nconst Runtime = styled.span`\r\n  margin-left: 1em;\r\n`;\r\n\r\nconst Bigdate = styled.div`\r\n  font-size: 1em;\r\n  position: relative;\r\n  top: -60px;\r\n  margin-left: 1.3rem;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst BigVote = styled.div`\r\n  font-size: 1rem;\r\n  margin-left: 1rem;\r\n  span {\r\n    color: gray;\r\n  }\r\n`;\r\n\r\nconst GenresList = styled.ul`\r\n  margin-left: 2rem;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  span {\r\n    color: gray;\r\n  }\r\n  li {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nconst BigTagline = styled.span`\r\n  display: block;\r\n  font-size: 1.25em;\r\n  line-height: 2;\r\n`;\r\n\r\nfunction Detail({ data, category, type, url }: ISlider) {\r\n  const history = useHistory();\r\n  const { scrollY } = useViewportScroll();\r\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\r\n    `/${url}/${type}/:movieId`\r\n  );\r\n  const clickedMovie =\r\n    bigMovieMatch?.params.movieId &&\r\n    data?.results.find(\r\n      (movie: IMovie) => +movie.id === +bigMovieMatch.params.movieId\r\n    );\r\n  const onOverlayClick = () => {\r\n    history.goBack();\r\n  };\r\n  const { data: detail } = useQuery<IDetail>(\r\n    [\"details\", `detail_${bigMovieMatch?.params.movieId}`],\r\n    () => getDetail(\"movie\", bigMovieMatch?.params.movieId)\r\n  );\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {bigMovieMatch ? (\r\n        <>\r\n          <Overlay\r\n            onClick={onOverlayClick}\r\n            exit={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n          />\r\n          <BigMovie\r\n            style={{ top: scrollY.get() + 100 }}\r\n            layoutId={bigMovieMatch.params.movieId}\r\n          >\r\n            {clickedMovie && detail ? (\r\n              <>\r\n                <BigCover\r\n                  style={{\r\n                    backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                      clickedMovie.backdrop_path\r\n                    )})`,\r\n                  }}\r\n                />\r\n                <DetailWrap>\r\n                  <BigTitle>\r\n                    <h3>{clickedMovie.title || clickedMovie.name}</h3>\r\n                  </BigTitle>\r\n                  <Bigdate>\r\n                    <span>\r\n                      {(\r\n                        clickedMovie.release_date || clickedMovie.first_air_date\r\n                      ).substr(0, 4)}\r\n                    </span>\r\n                    {detail.runtime ? (\r\n                      <Runtime>\r\n                        {Math.floor(detail?.runtime / 60)}시간\r\n                        {detail?.runtime % 60}분\r\n                      </Runtime>\r\n                    ) : null}\r\n                    <BigVote>\r\n                      <span>평점:</span>\r\n                      {clickedMovie.vote_average}\r\n                    </BigVote>\r\n                    <GenresList>\r\n                      <span>장르: </span>\r\n                      {detail?.genres?.map((genre) => (\r\n                        <li key={genre.id}>{genre.name},</li>\r\n                      ))}\r\n                    </GenresList>\r\n                  </Bigdate>\r\n                  <BigOverview>\r\n                    <BigTagline>{detail?.tagline}</BigTagline>\r\n                    {clickedMovie.overview}\r\n                  </BigOverview>\r\n                </DetailWrap>\r\n              </>\r\n            ) : null}\r\n          </BigMovie>\r\n        </>\r\n      ) : null}\r\n    </AnimatePresence>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","import styled from \"styled-components\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { useState } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport Detail from \"./Detail\";\r\n\r\nconst Row = styled(motion.div)`\r\n  display: grid;\r\n  gap: 5px;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  position: absolute;\r\n  width: 100%;\r\n`;\r\n\r\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\r\n  background-color: white;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 200px;\r\n  font-size: 66px;\r\n  cursor: pointer;\r\n  &:first-child {\r\n    transform-origin: center left;\r\n  }\r\n  &:last-child {\r\n    transform-origin: center right;\r\n  }\r\n`;\r\n\r\nconst Info = styled(motion.div)`\r\n  padding: 10px;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n  h4 {\r\n    text-align: center;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst Left = styled.div`\r\n  position: absolute;\r\n  height: 200px;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  z-index: 5;\r\n  border: none;\r\n  color: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  font-size: 48px;\r\n  padding: 0.5rem;\r\n  transition: 0.3s;\r\n`;\r\n\r\nconst Right = styled(Left)`\r\n  right: 0;\r\n`;\r\n\r\nconst rowVariants = {\r\n  hidden: (back: boolean) => ({\r\n    x: back ? -window.outerWidth - 5 : window.outerWidth + 5,\r\n  }),\r\n  visible: {\r\n    x: 0,\r\n  },\r\n  exit: (back: boolean) => ({\r\n    x: back ? window.outerWidth + 5 : -window.outerWidth - 5,\r\n  }),\r\n};\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    scale: 1.3,\r\n    y: -80,\r\n    transition: {\r\n      delay: 0.5,\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst infoVariants = {\r\n  hover: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.5,\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nexport interface ISlider {\r\n  data: any;\r\n  category?: string;\r\n  url?: string;\r\n  type?: string;\r\n}\r\n\r\nconst offset = 6;\r\n\r\nfunction Slider({ data, category, type, url }: ISlider) {\r\n  const history = useHistory();\r\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\r\n    `/${url}/${type}/:movieId`\r\n  );\r\n\r\n  const [index, setIndex] = useState(0);\r\n  const [leaving, setLeaving] = useState(false);\r\n  const [back, setBack] = useState(false);\r\n\r\n  const onBoxClicked = (movieId: number) => {\r\n    history.push(`/${url}/${type}/${movieId}`);\r\n  };\r\n\r\n  const toggleLeaving = () => setLeaving((prev) => !prev);\r\n  const incraseIndex = () => {\r\n    if (data) {\r\n      if (leaving) return;\r\n      toggleLeaving();\r\n      setBack(false);\r\n      const totalMovies = data.results.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n    }\r\n  };\r\n  const dcraseIndex = () => {\r\n    if (data) {\r\n      if (leaving) return;\r\n      toggleLeaving();\r\n      setBack(true);\r\n      const totalMovies = data.results.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setIndex((prev) => (prev === maxIndex ? 1 : prev - 1));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {data && (\r\n        <>\r\n          {index === 0 || <Left onClick={dcraseIndex}>&lsaquo;</Left>}\r\n          {index === 2 || <Right onClick={incraseIndex}>&rsaquo;</Right>}\r\n          <AnimatePresence\r\n            initial={false}\r\n            custom={back}\r\n            onExitComplete={toggleLeaving}\r\n          >\r\n            <Row\r\n              custom={back}\r\n              variants={rowVariants}\r\n              initial=\"hidden\"\r\n              animate=\"visible\"\r\n              exit=\"exit\"\r\n              transition={{ type: \"tween\", duration: 1 }}\r\n              key={index}\r\n            >\r\n              {data?.results\r\n                .slice(1)\r\n                .slice(offset * index, offset * index + offset)\r\n                .map((movie: any) => (\r\n                  <Box\r\n                    layoutId={movie.id + \"\"}\r\n                    key={movie.id}\r\n                    whileHover=\"hover\"\r\n                    initial=\"normal\"\r\n                    variants={boxVariants}\r\n                    onClick={() => onBoxClicked(movie.id)}\r\n                    transition={{ type: \"tween\" }}\r\n                    bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\r\n                  >\r\n                    <Info variants={infoVariants}>\r\n                      <h4>{category === \"tv\" ? movie.name : movie.title}</h4>\r\n                    </Info>\r\n                  </Box>\r\n                ))}\r\n            </Row>\r\n          </AnimatePresence>\r\n          {bigMovieMatch && category === \"movie\" ? (\r\n            <Detail data={data} category=\"movie\" type={type} url={url} />\r\n          ) : null}\r\n          {bigMovieMatch && category === \"tv\" ? (\r\n            <Detail data={data} category=\"tv\" type={type} url={url} />\r\n          ) : null}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default Slider;\r\n","import { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  getMovies,\r\n  getTopMovies,\r\n  getUpcomingMovies,\r\n  IGetMoviesResult,\r\n} from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport Slider from \"../Components/Slider\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: black;\r\n  padding-bottom: 200px;\r\n`;\r\n\r\nexport const Loader = styled.div`\r\n  height: 20vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: black;\r\n`;\r\n\r\nexport const Banner = styled.div<{ bgPhoto: string }>`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 60px;\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\r\n    url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 68px;\r\n  margin-bottom: 20px; ;\r\n`;\r\n\r\nexport const Overview = styled.p`\r\n  font-size: 30px;\r\n  width: 50%;\r\n`;\r\n\r\nexport const SlideContainer = styled.div`\r\n  height: 270px;\r\n`;\r\n\r\nexport const SliderTitle = styled.h2`\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  padding-left: 1rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nfunction Home() {\r\n  const { data: nowPlaying, isLoading: nowPlayingLoading } =\r\n    useQuery<IGetMoviesResult>([\"movies\", \"nowPlaying\"], getMovies);\r\n  const { data: topMovie, isLoading: topMovieLoading } =\r\n    useQuery<IGetMoviesResult>([\"movies\", \"topMovie\"], getTopMovies);\r\n  const { data: upcomingMovie, isLoading: upcomingMovieLoading } =\r\n    useQuery<IGetMoviesResult>([\"movies\", \"upcomingMovie\"], getUpcomingMovies);\r\n  return (\r\n    <Wrapper>\r\n      {nowPlayingLoading && topMovieLoading && upcomingMovieLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Banner\r\n            bgPhoto={makeImagePath(nowPlaying?.results[0].backdrop_path || \"\")}\r\n          >\r\n            <Title>{nowPlaying?.results[0].title}</Title>\r\n            <Overview>{nowPlaying?.results[0].overview}</Overview>\r\n          </Banner>\r\n          <SlideContainer>\r\n            <SliderTitle>Now Playing</SliderTitle>\r\n            <Slider\r\n              data={nowPlaying}\r\n              type=\"nowPlaying\"\r\n              category=\"movie\"\r\n              url=\"movie\"\r\n            />\r\n          </SlideContainer>\r\n          <SlideContainer>\r\n            <SliderTitle>Upcoming Movie</SliderTitle>\r\n            <Slider\r\n              data={upcomingMovie}\r\n              type=\"upcomingMovie\"\r\n              category=\"movie\"\r\n              url=\"movie\"\r\n            />\r\n          </SlideContainer>\r\n          <SlideContainer>\r\n            <SliderTitle>Top Rated</SliderTitle>\r\n            <Slider\r\n              data={topMovie}\r\n              type=\"topMovie\"\r\n              category=\"movie\"\r\n              url=\"movie\"\r\n            />\r\n          </SlideContainer>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { IMovie } from \"../api\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport { ISlider } from \"./Slider\";\r\nimport Detail from \"./Detail\";\r\n\r\nconst Wrapper = styled.article`\r\n  background-color: black;\r\n`;\r\n\r\nconst List = styled.div`\r\n  position: relative;\r\n  height: max-content;\r\n`;\r\n\r\nconst Row = styled(motion.div)`\r\n  display: grid;\r\n  gap: 5px;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  margin-bottom: 5px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Box = styled(motion.div)<{ bigphoto: string }>`\r\n  background-color: gray;\r\n  background-image: url(${(props) => props.bigphoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  font-size: 66px;\r\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n  cursor: pointer;\r\n  &:first-child {\r\n    transform-origin: center left;\r\n  }\r\n  &:last-child {\r\n    transform-origin: center right;\r\n  }\r\n  height: 200px;\r\n`;\r\n\r\nconst Info = styled(motion.div)`\r\n  padding: 10px;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n  h4 {\r\n    text-align: center;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n  }\r\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\r\n`;\r\n\r\nconst infoVariants = {\r\n  hover: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.5,\r\n      duration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    scale: 1.3,\r\n    y: -40,\r\n    transition: {\r\n      delay: 0.3,\r\n    },\r\n  },\r\n};\r\n\r\nfunction SearchResult({ data, category, type, url }: ISlider) {\r\n  const history = useHistory();\r\n\r\n  const onBoxClicked = (movieId: number) => {\r\n    history.push(`/${url}/${type}/${movieId}`);\r\n  };\r\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\r\n    `/${url}/${type}/:movieId`\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        {data && (\r\n          <List>\r\n            <Row>\r\n              {data?.results.map((movie: IMovie) => (\r\n                <Box\r\n                  layoutId={`${movie.id}${category}${type}`}\r\n                  key={movie.id}\r\n                  whileHover=\"hover\"\r\n                  initial=\"normal\"\r\n                  transition={{ type: \"tween\" }}\r\n                  onClick={() => onBoxClicked(movie.id)}\r\n                  variants={boxVariants}\r\n                  bigphoto={makeImagePath(movie.backdrop_path, \"w400\")}\r\n                >\r\n                  <Info variants={infoVariants}>\r\n                    <h4>{movie.title || movie.name}</h4>\r\n                  </Info>\r\n                </Box>\r\n              ))}\r\n            </Row>\r\n          </List>\r\n        )}\r\n      </Wrapper>\r\n      {bigMovieMatch && category === \"search\" ? (\r\n        <Detail data={data} category=\"search\" type={type} url={url} />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\nexport default SearchResult;\r\n","import { useEffect } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useLocation } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  getSearchMovie,\r\n  getSearchShows,\r\n  IGetMoviesResult,\r\n  IGetShowResult,\r\n} from \"../api\";\r\nimport SearchResult from \"../Components/SearchResult\";\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: black;\r\n`;\r\nconst Loader = styled.div`\r\n  height: 20vh;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst SlideWrap = styled.div`\r\n  margin-top: 5em;\r\n`;\r\nconst SlideTitle = styled.h2`\r\n  font-size: 2rem;\r\n  font-family: 600;\r\n  margin-bottom: 1rem;\r\n  padding-left: 1rem;\r\n`;\r\n\r\nfunction Search() {\r\n  const location = useLocation();\r\n  const keyword = new URLSearchParams(location.search).get(\"keyword\");\r\n  const {\r\n    data: searchMovie,\r\n    isLoading: loadSearchMovie,\r\n    refetch: refetchMovie,\r\n  } = useQuery<IGetMoviesResult>([\"search\", \"searchMovie\"], () =>\r\n    getSearchMovie(keyword)\r\n  );\r\n  const {\r\n    data: searchShows,\r\n    isLoading: loadSearchShows,\r\n    refetch: refetchShows,\r\n  } = useQuery<IGetShowResult>([\"search\", \"searchShow\"], () =>\r\n    getSearchShows(keyword)\r\n  );\r\n  useEffect(() => {\r\n    if (keyword === null || \"\") {\r\n      return;\r\n    }\r\n    refetchMovie();\r\n    refetchShows();\r\n  }, [keyword]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {keyword && loadSearchMovie && loadSearchShows ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : searchMovie?.total_results === 0 ||\r\n        searchShows?.total_results === 0 ? (\r\n        <SlideWrap>\r\n          <SlideTitle>Not Found</SlideTitle>\r\n        </SlideWrap>\r\n      ) : (\r\n        <>\r\n          <SlideWrap>\r\n            <SlideTitle>Movie Result</SlideTitle>\r\n            <SearchResult\r\n              data={searchMovie}\r\n              category=\"search\"\r\n              type=\"movie\"\r\n              url=\"search\"\r\n            />\r\n          </SlideWrap>\r\n          <SlideWrap>\r\n            <SlideTitle>Tv Result</SlideTitle>\r\n            <SearchResult\r\n              data={searchShows}\r\n              category=\"search\"\r\n              type=\"tv\"\r\n              url=\"search\"\r\n            />\r\n          </SlideWrap>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\nexport default Search;\r\n","import { useQuery } from \"react-query\";\r\nimport {\r\n  getOnAirShows,\r\n  getPopularShows,\r\n  getTopShows,\r\n  IGetShowResult,\r\n} from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport Slider from \"../Components/Slider\";\r\nimport {\r\n  Wrapper,\r\n  Loader,\r\n  Banner,\r\n  Title,\r\n  Overview,\r\n  SlideContainer,\r\n  SliderTitle,\r\n} from \"./Home\";\r\n\r\nfunction Tv() {\r\n  const { data: topShow, isLoading: topShowLoading } = useQuery<IGetShowResult>(\r\n    [\"tvs\", \"topShow\"],\r\n    getTopShows\r\n  );\r\n  const { data: popularShow, isLoading: popularShowLoading } =\r\n    useQuery<IGetShowResult>([\"tvs\", \"popularShow\"], getPopularShows);\r\n  const { data: onAirShow, isLoading: onAirShowLoading } =\r\n    useQuery<IGetShowResult>([\"tvs\", \"onAirShow\"], getOnAirShows);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {topShowLoading && popularShowLoading && onAirShowLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Banner\r\n            bgPhoto={makeImagePath(topShow?.results[0].backdrop_path || \"\")}\r\n          >\r\n            <Title>{topShow?.results[0].name}</Title>\r\n            <Overview>{topShow?.results[0].overview}</Overview>\r\n          </Banner>\r\n          <SlideContainer>\r\n            <SliderTitle>Top Show</SliderTitle>\r\n            <Slider data={topShow} type=\"topShow\" category=\"tv\" url=\"tv\" />\r\n          </SlideContainer>\r\n          <SlideContainer>\r\n            <SliderTitle>Popular Show</SliderTitle>\r\n            <Slider\r\n              data={popularShow}\r\n              type=\"popularShow\"\r\n              category=\"tv\"\r\n              url=\"tv\"\r\n            />\r\n          </SlideContainer>\r\n          <SlideContainer>\r\n            <SliderTitle>Top Rated</SliderTitle>\r\n            <Slider data={onAirShow} type=\"onAirShow\" category=\"tv\" url=\"tv\" />\r\n          </SlideContainer>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\nexport default Tv;\r\n","import { Link, useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { motion, useAnimation, useViewportScroll } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Nav = styled(motion.nav)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: fixed;\r\n  width: 100%;\r\n  top: 0;\r\n  font-size: 14px;\r\n  padding: 20px 60px;\r\n  color: white;\r\n`;\r\n\r\nconst Col = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled(motion.svg)`\r\n  margin-right: 50px;\r\n  width: 95px;\r\n  height: 25px;\r\n  fill: ${(props) => props.theme.red};\r\n  path {\r\n    stroke-width: 6px;\r\n    stroke: white;\r\n  }\r\n`;\r\n\r\nconst Items = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  margin-right: 20px;\r\n  color: ${(props) => props.theme.white.darker};\r\n  transition: color 0.3s ease-in-out;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  &:hover {\r\n    color: ${(props) => props.theme.white.lighter};\r\n  }\r\n`;\r\n\r\nconst Search = styled.form`\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  svg {\r\n    height: 25px;\r\n  }\r\n`;\r\n\r\nconst Circle = styled(motion.span)`\r\n  position: absolute;\r\n  width: 5px;\r\n  height: 5px;\r\n  border-radius: 2.5px;\r\n  bottom: -5px;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  background-color: ${(props) => props.theme.red};\r\n`;\r\n\r\nconst Input = styled(motion.input)`\r\n  transform-origin: right center;\r\n  position: absolute;\r\n  right: 0px;\r\n  padding: 5px 10px;\r\n  padding-left: 40px;\r\n  z-index: -1;\r\n  color: white;\r\n  font-size: 16px;\r\n  background-color: transparent;\r\n  border: 1px solid ${(props) => props.theme.white.lighter};\r\n`;\r\n\r\nconst logoVariants = {\r\n  normal: {\r\n    fillOpacity: 1,\r\n  },\r\n  active: {\r\n    fillOpacity: [0, 1, 0],\r\n    transition: {\r\n      repeat: Infinity,\r\n    },\r\n  },\r\n};\r\n\r\nconst navVariants = {\r\n  top: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n  },\r\n  scroll: {\r\n    backgroundColor: \"rgba(0, 0, 0, 1)\",\r\n  },\r\n};\r\n\r\ninterface IForm {\r\n  keyword: string;\r\n}\r\n\r\nfunction Header() {\r\n  const [searchOpen, setSearchOpen] = useState(false);\r\n  const homeMatch = useRouteMatch(\"/\");\r\n  const tvMatch = useRouteMatch(\"/tv\");\r\n  const inputAnimation = useAnimation();\r\n  const navAnimation = useAnimation();\r\n  const { scrollY } = useViewportScroll();\r\n  const toggleSearch = () => {\r\n    if (searchOpen) {\r\n      inputAnimation.start({\r\n        scaleX: 0,\r\n      });\r\n    } else {\r\n      inputAnimation.start({ scaleX: 1 });\r\n    }\r\n    setSearchOpen((prev) => !prev);\r\n  };\r\n  useEffect(() => {\r\n    scrollY.onChange(() => {\r\n      if (scrollY.get() > 80) {\r\n        navAnimation.start(\"scroll\");\r\n      } else {\r\n        navAnimation.start(\"top\");\r\n      }\r\n    });\r\n  }, [scrollY, navAnimation]);\r\n  const history = useHistory();\r\n  const { register, handleSubmit } = useForm<IForm>();\r\n  const onValid = (data: IForm) => {\r\n    history.push(`/search?keyword=${data.keyword}`);\r\n  };\r\n  return (\r\n    <Nav variants={navVariants} animate={navAnimation} initial={\"top\"}>\r\n      <Col>\r\n        <Logo\r\n          variants={logoVariants}\r\n          whileHover=\"active\"\r\n          animate=\"normal\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"1024\"\r\n          height=\"276.742\"\r\n          viewBox=\"0 0 1024 276.742\"\r\n        >\r\n          <motion.path d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\" />\r\n        </Logo>\r\n        <Items>\r\n          <Item>\r\n            <Link to=\"/\">\r\n              Home {homeMatch?.isExact && <Circle layoutId=\"circle\" />}\r\n            </Link>\r\n          </Item>\r\n          <Item>\r\n            <Link to=\"/tv\">\r\n              Tv Shows {tvMatch && <Circle layoutId=\"circle\" />}\r\n            </Link>\r\n          </Item>\r\n        </Items>\r\n      </Col>\r\n      <Col>\r\n        <Search onSubmit={handleSubmit(onValid)}>\r\n          <motion.svg\r\n            onClick={toggleSearch}\r\n            animate={{ x: searchOpen ? -210 : 0 }}\r\n            transition={{ type: \"linear\" }}\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 20 20\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\r\n              clipRule=\"evenodd\"\r\n            ></path>\r\n          </motion.svg>\r\n          <Input\r\n            {...register(\"keyword\", { required: true, minLength: 2 })}\r\n            animate={inputAnimation}\r\n            initial={{ scaleX: 0 }}\r\n            transition={{ type: \"linear\" }}\r\n            placeholder=\"Search for movie or tv show...\"\r\n          />\r\n        </Search>\r\n      </Col>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Routes/Home\";\nimport Search from \"./Routes/Search\";\nimport Tv from \"./Routes/Tv\";\nimport Header from \"./Components/Header\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Header />\n      <Switch>\n        <Route path=\"/tv\">\n          <Tv />\n        </Route>\n        <Route path=\"/search\">\n          <Search />\n        </Route>\n        <Route path={[\"/\", \"/movies/:movieId\"]}>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { theme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n  overflow-x: hidden\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  color:${(props) => props.theme.white.darker};\n  background-color: black;\n  line-height: 1.2;\n  \n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\nconst client = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme: DefaultTheme = {\r\n  red: \"#E51013\",\r\n  black: {\r\n    veryDark: \"#141414\",\r\n    darker: \"#181818\",\r\n    lighter: \"#2F2F2F\",\r\n  },\r\n  white: {\r\n    lighter: \"#fff\",\r\n    darker: \"#e5e5e5\",\r\n  },\r\n};"],"sourceRoot":""}